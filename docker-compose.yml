networks:
  demo:
  postgres-network:
    driver: bridge


x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks: ['demo']
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
    - DB_POSTGRESDB_PORT=5432
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY
    - N8N_USER_MANAGEMENT_JWT_SECRET
    - OLLAMA_HOST=host.docker.internal:11434
  env_file:
    - .env
  links:
    - postgres


services:
  postgres:
    image: postgres:16-alpine
    networks: ['demo', 'postgres-network']
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./volumes/postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10
    env_file:
      - .env

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: pgadminpassword
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - ./volumes/pgadmin-storage:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - postgres-network
    depends_on:
      - postgres

  qdrant:
    image: qdrant/qdrant
    hostname: qdrant
    container_name: qdrant
    networks: ['demo']
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - ./volumes/qdrant_storage:/qdrant/storage

  api-server:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: api-server
    networks: ['demo']
    restart: unless-stopped
    ports:
      - 8000:8000
    volumes:
      - ./shared:/app/shared
    environment:
      - POSTGRES_CONNECTION_STRING=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - QDRANT_URL=http://qdrant:6333
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_started

  n8n-import:
    <<: *service-n8n
    hostname: n8n-import
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - |
        n8n import:credentials --separate --input=/n8n_credentials && \
        n8n import:workflow --separate --input=/n8n_workflows && \
        n8n update:workflow --all --active=true
    volumes:
      - ./n8n_workflows:/n8n_workflows
      - ./n8n_credentials:/n8n_credentials
      - ./volumes/n8n_storage:/home/node/.n8n
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy

  n8n:
    <<: *service-n8n
    hostname: n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - ./n8n_workflows:/n8n_workflows
      - ./n8n_credentials:/n8n_credentials
      - ./volumes/n8n_storage:/home/node/.n8n
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully